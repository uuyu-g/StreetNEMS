{"id":"../node_modules/nem-sdk/build/model/transactions/signatureTransaction.js","dependencies":[{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/signatureTransaction.js.map","includedInParent":true,"mtime":1555076383010},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/package.json","includedInParent":true,"mtime":1555076384616},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/package.json","includedInParent":true,"mtime":1555076377737},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/.babelrc","includedInParent":true,"mtime":1530213456000},{"name":"../network","loc":{"line":3,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/signatureTransaction.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/network.js"},{"name":"../../utils/helpers","loc":{"line":7,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/signatureTransaction.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/utils/helpers.js"},{"name":"../transactionTypes","loc":{"line":11,"column":32},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/signatureTransaction.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactionTypes.js"},{"name":"../fees","loc":{"line":15,"column":20},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/signatureTransaction.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/fees.js"},{"name":"../../crypto/keyPair","loc":{"line":19,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/signatureTransaction.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/crypto/keyPair.js"},{"name":"../objects","loc":{"line":23,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/signatureTransaction.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/objects.js"}],"generated":{"js":"'use strict';\n\nvar _network = require('../network');\n\nvar _network2 = _interopRequireDefault(_network);\n\nvar _helpers = require('../../utils/helpers');\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nvar _transactionTypes = require('../transactionTypes');\n\nvar _transactionTypes2 = _interopRequireDefault(_transactionTypes);\n\nvar _fees = require('../fees');\n\nvar _fees2 = _interopRequireDefault(_fees);\n\nvar _keyPair = require('../../crypto/keyPair');\n\nvar _keyPair2 = _interopRequireDefault(_keyPair);\n\nvar _objects = require('../objects');\n\nvar _objects2 = _interopRequireDefault(_objects);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Prepare a signature transaction object\n *\n * @param {object} common - A common object\n * @param {object} tx - The un-prepared signature transaction object\n * @param {number} network - A network id\n *\n * @return {object} - A [MultisigSignatureTransaction]{@link http://bob.nem.ninja/docs/#multisigSignatureTransaction} object ready for serialization\n */\nvar prepare = function prepare(common, tx, network) {\n    if (!common || !tx || !network) throw new Error('Missing parameter !');\n    var kp = _keyPair2.default.create(_helpers2.default.fixPrivateKey(common.privateKey));\n    var due = network === _network2.default.data.testnet.id ? 60 : 24 * 60;\n\n    var senderPublicKey = kp.publicKey.toString();\n    var timeStamp = _helpers2.default.createNEMTimeStamp();\n    var version = _network2.default.getVersion(1, network);\n    var data = _objects2.default.create(\"commonTransactionPart\")(_transactionTypes2.default.multisigSignature, senderPublicKey, timeStamp, due, version);\n    var fee = _fees2.default.signatureTransaction;\n\n    var custom = {\n        'fee': fee\n    };\n    var entity = _helpers2.default.extendObj(tx, data, custom);\n    return entity;\n};\n\nmodule.exports = {\n    prepare: prepare\n};\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/model/transactions/signatureTransaction.js"],"names":["prepare","common","tx","network","Error","kp","KeyPair","create","Helpers","fixPrivateKey","privateKey","due","Network","data","testnet","id","senderPublicKey","publicKey","toString","timeStamp","createNEMTimeStamp","version","getVersion","Objects","TransactionTypes","multisigSignature","fee","Fees","signatureTransaction","custom","entity","extendObj","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;AASA,IAAIA,UAAU,SAAVA,OAAU,CAASC,MAAT,EAAiBC,EAAjB,EAAqBC,OAArB,EAA8B;AACxC,QAAI,CAACF,MAAD,IAAW,CAACC,EAAZ,IAAkB,CAACC,OAAvB,EAAgC,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AAChC,QAAIC,KAAKC,kBAAQC,MAAR,CAAeC,kBAAQC,aAAR,CAAsBR,OAAOS,UAA7B,CAAf,CAAT;AACA,QAAIC,MAAMR,YAAYS,kBAAQC,IAAR,CAAaC,OAAb,CAAqBC,EAAjC,GAAsC,EAAtC,GAA2C,KAAK,EAA1D;;AAEA,QAAIC,kBAAkBX,GAAGY,SAAH,CAAaC,QAAb,EAAtB;AACA,QAAIC,YAAYX,kBAAQY,kBAAR,EAAhB;AACA,QAAIC,UAAUT,kBAAQU,UAAR,CAAmB,CAAnB,EAAsBnB,OAAtB,CAAd;AACA,QAAIU,OAAOU,kBAAQhB,MAAR,CAAe,uBAAf,EAAwCiB,2BAAiBC,iBAAzD,EAA4ET,eAA5E,EAA6FG,SAA7F,EAAwGR,GAAxG,EAA6GU,OAA7G,CAAX;AACA,QAAIK,MAAMC,eAAKC,oBAAf;;AAEA,QAAIC,SAAS;AACT,eAAOH;AADE,KAAb;AAGA,QAAII,SAAStB,kBAAQuB,SAAR,CAAkB7B,EAAlB,EAAsBW,IAAtB,EAA4BgB,MAA5B,CAAb;AACA,WAAOC,MAAP;AACH,CAhBD;;AAkBAE,OAAOC,OAAP,GAAiB;AACbjC;AADa,CAAjB","file":"signatureTransaction.js","sourcesContent":["import Network from '../network';\nimport Helpers from '../../utils/helpers';\nimport TransactionTypes from '../transactionTypes';\nimport Fees from '../fees';\nimport KeyPair from '../../crypto/keyPair';\nimport Objects from '../objects';\n\n/**\n * Prepare a signature transaction object\n *\n * @param {object} common - A common object\n * @param {object} tx - The un-prepared signature transaction object\n * @param {number} network - A network id\n *\n * @return {object} - A [MultisigSignatureTransaction]{@link http://bob.nem.ninja/docs/#multisigSignatureTransaction} object ready for serialization\n */\nlet prepare = function(common, tx, network) {\n    if (!common || !tx || !network) throw new Error('Missing parameter !');\n    let kp = KeyPair.create(Helpers.fixPrivateKey(common.privateKey));\n    let due = network === Network.data.testnet.id ? 60 : 24 * 60;\n\n    let senderPublicKey = kp.publicKey.toString();\n    let timeStamp = Helpers.createNEMTimeStamp();\n    let version = Network.getVersion(1, network);\n    let data = Objects.create(\"commonTransactionPart\")(TransactionTypes.multisigSignature, senderPublicKey, timeStamp, due, version);\n    let fee = Fees.signatureTransaction;\n\n    let custom = {\n        'fee': fee\n    };\n    let entity = Helpers.extendObj(tx, data, custom);\n    return entity;\n}\n\nmodule.exports = {\n    prepare\n}\n\n"]}},"error":null,"hash":"997a68f81ce252bcd5f5ae84fffdf6da","cacheData":{"env":{}}}