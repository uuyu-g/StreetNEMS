{"id":"../node_modules/nem-sdk/build/model/transactions/message.js","dependencies":[{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/message.js.map","includedInParent":true,"mtime":1555076382698},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/package.json","includedInParent":true,"mtime":1555076384616},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/package.json","includedInParent":true,"mtime":1555076377737},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/.babelrc","includedInParent":true,"mtime":1530213456000},{"name":"../../crypto/cryptoHelpers","loc":{"line":3,"column":29},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/message.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/crypto/cryptoHelpers.js"},{"name":"../../utils/convert","loc":{"line":7,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/message.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/utils/convert.js"},{"name":"../../utils/helpers","loc":{"line":11,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/transactions/message.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/utils/helpers.js"}],"generated":{"js":"'use strict';\n\nvar _cryptoHelpers = require('../../crypto/cryptoHelpers');\n\nvar _cryptoHelpers2 = _interopRequireDefault(_cryptoHelpers);\n\nvar _convert = require('../../utils/convert');\n\nvar _convert2 = _interopRequireDefault(_convert);\n\nvar _helpers = require('../../utils/helpers');\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Prepare a message object\n *\n * @param {object} common - A common object\n * @param {object} tx - An un-prepared transferTransaction object\n *\n * @return {object} - A prepared message object\n */\nvar prepare = function prepare(common, tx) {\n    if (tx.messageType === 2 && common.privateKey) {\n        return {\n            'type': 2,\n            'payload': _cryptoHelpers2.default.encode(common.privateKey, tx.recipientPublicKey, tx.message.toString())\n        };\n    } else if (tx.messageType === 2 && common.isHW) {\n        return {\n            'type': 2,\n            'payload': _convert2.default.utf8ToHex(tx.message.toString()),\n            'publicKey': tx.recipientPublicKey\n        };\n    } else if (tx.messageType === 0 && _helpers2.default.isHexadecimal(tx.message.toString())) {\n        return {\n            'type': 1,\n            'payload': 'fe' + tx.message.toString()\n        };\n    } else {\n        return {\n            'type': 1,\n            'payload': _convert2.default.utf8ToHex(tx.message.toString())\n        };\n    }\n};\n\nmodule.exports = {\n    prepare: prepare\n};\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/model/transactions/message.js"],"names":["prepare","common","tx","messageType","privateKey","CryptoHelpers","encode","recipientPublicKey","message","toString","isHW","Convert","utf8ToHex","Helpers","isHexadecimal","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,IAAIA,UAAU,SAAVA,OAAU,CAASC,MAAT,EAAiBC,EAAjB,EAAqB;AAC/B,QAAIA,GAAGC,WAAH,KAAmB,CAAnB,IAAwBF,OAAOG,UAAnC,EAA+C;AAC3C,eAAO;AACH,oBAAQ,CADL;AAEH,uBAAWC,wBAAcC,MAAd,CAAqBL,OAAOG,UAA5B,EAAwCF,GAAGK,kBAA3C,EAA+DL,GAAGM,OAAH,CAAWC,QAAX,EAA/D;AAFR,SAAP;AAIH,KALD,MAKO,IAAIP,GAAGC,WAAH,KAAmB,CAAnB,IAAwBF,OAAOS,IAAnC,EAAyC;AAC5C,eAAO;AACH,oBAAQ,CADL;AAEH,uBAAWC,kBAAQC,SAAR,CAAkBV,GAAGM,OAAH,CAAWC,QAAX,EAAlB,CAFR;AAGH,yBAAaP,GAAGK;AAHb,SAAP;AAKH,KANM,MAMA,IAAGL,GAAGC,WAAH,KAAmB,CAAnB,IAAwBU,kBAAQC,aAAR,CAAsBZ,GAAGM,OAAH,CAAWC,QAAX,EAAtB,CAA3B,EAAyE;AAC5E,eAAO;AACH,oBAAQ,CADL;AAEH,uBAAW,OAAOP,GAAGM,OAAH,CAAWC,QAAX;AAFf,SAAP;AAIH,KALM,MAKA;AACH,eAAO;AACH,oBAAQ,CADL;AAEH,uBAAWE,kBAAQC,SAAR,CAAkBV,GAAGM,OAAH,CAAWC,QAAX,EAAlB;AAFR,SAAP;AAIH;AACJ,CAvBD;;AAyBAM,OAAOC,OAAP,GAAiB;AACbhB;AADa,CAAjB","file":"message.js","sourcesContent":["import CryptoHelpers from '../../crypto/cryptoHelpers';\nimport Convert from '../../utils/convert';\nimport Helpers from '../../utils/helpers';\n\n/**\n * Prepare a message object\n *\n * @param {object} common - A common object\n * @param {object} tx - An un-prepared transferTransaction object\n *\n * @return {object} - A prepared message object\n */\nlet prepare = function(common, tx) {\n    if (tx.messageType === 2 && common.privateKey) {\n        return {\n            'type': 2,\n            'payload': CryptoHelpers.encode(common.privateKey, tx.recipientPublicKey, tx.message.toString())\n        };\n    } else if (tx.messageType === 2 && common.isHW) {\n        return {\n            'type': 2,\n            'payload': Convert.utf8ToHex(tx.message.toString()),\n            'publicKey': tx.recipientPublicKey\n        };\n    } else if(tx.messageType === 0 && Helpers.isHexadecimal(tx.message.toString())) {\n        return {\n            'type': 1,\n            'payload': 'fe' + tx.message.toString()\n        };\n    } else {\n        return {\n            'type': 1,\n            'payload': Convert.utf8ToHex(tx.message.toString())\n        };\n    }\n}\n\nmodule.exports = {\n    prepare\n}"]}},"error":null,"hash":"cffabea76be4582895b7b9205a6436b3","cacheData":{"env":{}}}