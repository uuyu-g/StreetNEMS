{"id":"../node_modules/nem-sdk/build/com/requests/apostille.js","dependencies":[{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/apostille.js.map","includedInParent":true,"mtime":1555076380024},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/package.json","includedInParent":true,"mtime":1555076384616},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/package.json","includedInParent":true,"mtime":1555076377737},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/.babelrc","includedInParent":true,"mtime":1530213456000},{"name":"./send","loc":{"line":3,"column":20},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/apostille.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/send.js"},{"name":"./headers","loc":{"line":7,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/apostille.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/headers.js"},{"name":"../../model/nodes","loc":{"line":11,"column":21},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/apostille.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/model/nodes.js"}],"generated":{"js":"'use strict';\n\nvar _send = require('./send');\n\nvar _send2 = _interopRequireDefault(_send);\n\nvar _headers = require('./headers');\n\nvar _headers2 = _interopRequireDefault(_headers);\n\nvar _nodes = require('../../model/nodes');\n\nvar _nodes2 = _interopRequireDefault(_nodes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Audit an apostille file\n *\n * @param {string} publicKey - The signer public key\n * @param {string} data - The file data of audited file\n * @param {string} signedData - The signed data into the apostille transaction message\n *\n * @return {boolean} - True if valid, false otherwise\n */\nvar audit = function audit(publicKey, data, signedData) {\n\t// Configure the request\n\tvar options = {\n\t\turl: _nodes2.default.apostilleAuditServer,\n\t\tmethod: 'POST',\n\t\theaders: _headers2.default.urlEncoded,\n\t\tqs: { 'publicKey': publicKey, 'data': data, 'signedData': signedData }\n\t\t// Send the request\n\t};return (0, _send2.default)(options);\n};\n\nmodule.exports = {\n\taudit: audit\n};\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/com/requests/apostille.js"],"names":["audit","publicKey","data","signedData","options","url","Nodes","apostilleAuditServer","method","headers","Headers","urlEncoded","qs","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;AASA,IAAIA,QAAQ,SAARA,KAAQ,CAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsC;AACjD;AACA,KAAIC,UAAU;AACVC,OAAKC,gBAAMC,oBADD;AAEVC,UAAQ,MAFE;AAGVC,WAASC,kBAAQC,UAHP;AAIVC,MAAI,EAAC,aAAaX,SAAd,EAAyB,QAAQC,IAAjC,EAAsC,cAAcC,UAApD;AAER;AANc,EAAd,CAOA,OAAO,oBAAKC,OAAL,CAAP;AACA,CAVD;;AAYAS,OAAOC,OAAP,GAAiB;AAChBd;AADgB,CAAjB","file":"apostille.js","sourcesContent":["import Send from './send';\nimport Headers from './headers';\nimport Nodes from '../../model/nodes';\n\n/**\n * Audit an apostille file\n *\n * @param {string} publicKey - The signer public key\n * @param {string} data - The file data of audited file\n * @param {string} signedData - The signed data into the apostille transaction message\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet audit = function(publicKey, data, signedData) {\n\t// Configure the request\n\tvar options = {\n\t    url: Nodes.apostilleAuditServer,\n\t    method: 'POST',\n\t    headers: Headers.urlEncoded,\n\t    qs: {'publicKey': publicKey, 'data': data,'signedData': signedData}\n\t}\n\t// Send the request\n\treturn Send(options);\n}\n\nmodule.exports = {\n\taudit\n}"]}},"error":null,"hash":"49cc4cb774db9767d7ebf5f6097506fb","cacheData":{"env":{}}}