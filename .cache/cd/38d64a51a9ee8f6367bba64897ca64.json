{"id":"../node_modules/nem-sdk/build/com/websockets/connector.js","dependencies":[{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/websockets/connector.js.map","includedInParent":true,"mtime":1555063520713},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/package.json","includedInParent":true,"mtime":1555063526179},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/package.json","includedInParent":true,"mtime":1555063516168},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/.babelrc","includedInParent":true,"mtime":1530213456000},{"name":"../../external/sockjs-0.3.4","loc":{"line":3,"column":22},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/websockets/connector.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/external/sockjs-0.3.4.js"},{"name":"sockjs-client","loc":{"line":5,"column":28},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/websockets/connector.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/sockjs-client/lib/entry.js"},{"name":"../../external/stomp","loc":{"line":9,"column":21},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/websockets/connector.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/external/stomp.js"}],"generated":{"js":"'use strict';\n\nvar _sockjs = require('../../external/sockjs-0.3.4');\n\nvar _sockjsClient = require('sockjs-client');\n\nvar _sockjsClient2 = _interopRequireDefault(_sockjsClient);\n\nvar _stomp = require('../../external/stomp');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create a connector object\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {string} address - An account address\n *\n * @return {object} - A connector object\n */\nvar create = function create(endpoint, address) {\n  return {\n    endpoint: endpoint,\n    address: address.replace(/-/g, \"\").toUpperCase(),\n    socket: undefined,\n    stompClient: undefined,\n    connect: connect,\n    close: close\n  };\n};\n\n/**\n * Tries to establish a connection. \n *\n * @return {promise} - A resolved or rejected promise\n */\nvar connect = function connect() {\n  var _this = this;\n\n  return new Promise(function (resolve, reject) {\n    var self = _this;\n    if (!_sockjs.SockJS) self.socket = new _sockjsClient2.default(self.endpoint.host + ':' + self.endpoint.port + '/w/messages');else self.socket = new _sockjs.SockJS(self.endpoint.host + ':' + self.endpoint.port + '/w/messages');\n    self.stompClient = _stomp.Stomp.over(self.socket);\n    self.stompClient.debug = false;\n    self.stompClient.connect({}, function (frame) {\n      resolve(true);\n    }, function (err) {\n      reject(\"Connection failed!\");\n    });\n  });\n};\n\n/**\n * Close a connection\n */\nvar close = function close() {\n  var self = this;\n  console.log(\"Connection to \" + self.endpoint.host + \" must be closed now.\");\n  self.socket.close();\n  self.socket.onclose = function (e) {\n    console.log(e);\n  };\n};\n\nmodule.exports = {\n  create: create\n};\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/com/websockets/connector.js"],"names":["create","endpoint","address","replace","toUpperCase","socket","undefined","stompClient","connect","close","Promise","resolve","reject","self","SockJSBrowser","SockJSNode","host","port","Stomp","over","debug","frame","err","console","log","onclose","e","module","exports"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AAEA;;;;;;;;AAQA,IAAIA,SAAS,SAATA,MAAS,CAASC,QAAT,EAAmBC,OAAnB,EAA4B;AACxC,SAAO;AACND,cAAUA,QADJ;AAENC,aAASA,QAAQC,OAAR,CAAgB,IAAhB,EAAsB,EAAtB,EAA0BC,WAA1B,EAFH;AAGNC,YAAQC,SAHF;AAIAC,iBAAaD,SAJb;AAKAE,aAASA,OALT;AAMAC,WAAOA;AANP,GAAP;AAQA,CATD;;AAWA;;;;;AAKA,IAAID,UAAU,SAAVA,OAAU,GAAW;AAAA;;AACxB,SAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAIC,OAAO,KAAX;AACA,QAAI,CAACC,cAAL,EAAoBD,KAAKR,MAAL,GAAc,IAAIU,sBAAJ,CAAeF,KAAKZ,QAAL,CAAce,IAAd,GAAqB,GAArB,GAA2BH,KAAKZ,QAAL,CAAcgB,IAAzC,GAAgD,aAA/D,CAAd,CAApB,KACKJ,KAAKR,MAAL,GAAc,IAAIS,cAAJ,CAAkBD,KAAKZ,QAAL,CAAce,IAAd,GAAqB,GAArB,GAA2BH,KAAKZ,QAAL,CAAcgB,IAAzC,GAAgD,aAAlE,CAAd;AACFJ,SAAKN,WAAL,GAAmBW,aAAMC,IAAN,CAAWN,KAAKR,MAAhB,CAAnB;AACAQ,SAAKN,WAAL,CAAiBa,KAAjB,GAAyB,KAAzB;AACAP,SAAKN,WAAL,CAAiBC,OAAjB,CAAyB,EAAzB,EAA6B,UAASa,KAAT,EAAgB;AAC5CV,cAAQ,IAAR;AACA,KAFD,EAEG,UAACW,GAAD,EAAS;AACXV,aAAO,oBAAP;AACH,KAJE;AAKH,GAXM,CAAP;AAYA,CAbD;;AAeA;;;AAGA,IAAIH,QAAQ,SAARA,KAAQ,GAAW;AACnB,MAAII,OAAO,IAAX;AACAU,UAAQC,GAAR,CAAY,mBAAkBX,KAAKZ,QAAL,CAAce,IAAhC,GAAsC,sBAAlD;AACAH,OAAKR,MAAL,CAAYI,KAAZ;AACAI,OAAKR,MAAL,CAAYoB,OAAZ,GAAsB,UAASC,CAAT,EAAY;AAC9BH,YAAQC,GAAR,CAAYE,CAAZ;AACH,GAFD;AAGH,CAPD;;AASAC,OAAOC,OAAP,GAAiB;AAChB5B;AADgB,CAAjB","file":"connector.js","sourcesContent":["import { SockJS as SockJSBrowser } from '../../external/sockjs-0.3.4';\nimport SockJSNode from 'sockjs-client';\nimport { Stomp } from '../../external/stomp';\n\n/**\n * Create a connector object\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {string} address - An account address\n *\n * @return {object} - A connector object\n */\nlet create = function(endpoint, address) {\n\treturn {\n\t\tendpoint: endpoint,\n\t\taddress: address.replace(/-/g, \"\").toUpperCase(),\n\t\tsocket: undefined,\n        stompClient: undefined,\n        connect: connect,\n        close: close\n\t}\n}\n\n/**\n * Tries to establish a connection. \n *\n * @return {promise} - A resolved or rejected promise\n */\nlet connect = function() {\n\treturn new Promise((resolve, reject) => {\n\t\tvar self = this;\n\t\tif (!SockJSBrowser) self.socket = new SockJSNode(self.endpoint.host + ':' + self.endpoint.port + '/w/messages');\n\t\telse self.socket = new SockJSBrowser(self.endpoint.host + ':' + self.endpoint.port + '/w/messages');\n\t    self.stompClient = Stomp.over(self.socket);\n\t    self.stompClient.debug = false;\n\t    self.stompClient.connect({}, function(frame) {\n\t\t    resolve(true);\n\t    }, (err) => {\n\t\t    reject(\"Connection failed!\");\n\t\t});        \t\n\t});\n}\n\n/**\n * Close a connection\n */\nlet close = function() {\n    var self = this;\n    console.log(\"Connection to \"+ self.endpoint.host +\" must be closed now.\");\n    self.socket.close();\n    self.socket.onclose = function(e) {\n        console.log(e);\n    };\n}\n\nmodule.exports = {\n\tcreate\n}"]}},"error":null,"hash":"7fda4e28d6fbaac33aea6c7dc02ce5c5","cacheData":{"env":{}}}