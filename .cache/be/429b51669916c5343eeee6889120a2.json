{"id":"../node_modules/nem-sdk/build/com/requests/namespace.js","dependencies":[{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/namespace.js.map","includedInParent":true,"mtime":1555076380253},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/package.json","includedInParent":true,"mtime":1555076384616},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/package.json","includedInParent":true,"mtime":1555076377737},{"name":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/.babelrc","includedInParent":true,"mtime":1530213456000},{"name":"./send","loc":{"line":3,"column":20},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/namespace.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/send.js"},{"name":"./headers","loc":{"line":7,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/namespace.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/headers.js"},{"name":"../../utils/helpers","loc":{"line":11,"column":23},"parent":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/com/requests/namespace.js","resolved":"/Users/yugo/Dropbox/Programing/NEM/streetnems/node_modules/nem-sdk/build/utils/helpers.js"}],"generated":{"js":"'use strict';\n\nvar _send = require('./send');\n\nvar _send2 = _interopRequireDefault(_send);\n\nvar _headers = require('./headers');\n\nvar _headers2 = _interopRequireDefault(_headers);\n\nvar _helpers = require('../../utils/helpers');\n\nvar _helpers2 = _interopRequireDefault(_helpers);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Gets root namespaces.\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {number} id - The namespace id up to which root namespaces are returned (optional)\n *\n * @return {object} - An array of [NamespaceMetaDataPair]{@link http://bob.nem.ninja/docs/#namespaceMetaDataPair} objects\n */\nvar roots = function roots(endpoint, id) {\n\t// Configure the request\n\tvar options = {\n\t\turl: _helpers2.default.formatEndpoint(endpoint) + '/namespace/root/page',\n\t\tmethod: 'GET',\n\t\theaders: _headers2.default.urlEncoded,\n\t\tqs: undefined === id ? { 'pageSize': 100 } : { 'id': id, 'pageSize': 100 }\n\t\t// Send the request\n\t};return (0, _send2.default)(options);\n};\n\n/**\n * Gets mosaic definitions of a namespace\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {string} id - A namespace id\n *\n * @return {object} - An array of [MosaicDefinition]{@link http://bob.nem.ninja/docs/#mosaicDefinition} objects\n */\nvar mosaicDefinitions = function mosaicDefinitions(endpoint, id) {\n\t// Configure the request\n\tvar options = {\n\t\turl: _helpers2.default.formatEndpoint(endpoint) + '/namespace/mosaic/definition/page',\n\t\tmethod: 'GET',\n\t\theaders: _headers2.default.urlEncoded,\n\t\tqs: { 'namespace': id }\n\t\t// Send the request\n\t};return (0, _send2.default)(options);\n};\n\n/**\n * Gets the namespace with given id.\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {string} id - A namespace id\n *\n * @return {object} - A [NamespaceInfo]{@link http://bob.nem.ninja/docs/#namespace} object\n */\nvar info = function info(endpoint, id) {\n\t// Configure the request\n\tvar options = {\n\t\turl: _helpers2.default.formatEndpoint(endpoint) + '/namespace',\n\t\tmethod: 'GET',\n\t\theaders: _headers2.default.urlEncoded,\n\t\tqs: { 'namespace': id }\n\t\t// Send the request\n\t};return (0, _send2.default)(options);\n};\n\nmodule.exports = {\n\troots: roots,\n\tmosaicDefinitions: mosaicDefinitions,\n\tinfo: info\n};\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/com/requests/namespace.js"],"names":["roots","endpoint","id","options","url","Helpers","formatEndpoint","method","headers","Headers","urlEncoded","qs","undefined","mosaicDefinitions","info","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,IAAIA,QAAQ,SAARA,KAAQ,CAASC,QAAT,EAAmBC,EAAnB,EAAsB;AACjC;AACA,KAAIC,UAAU;AACVC,OAAKC,kBAAQC,cAAR,CAAuBL,QAAvB,IAAmC,sBAD9B;AAEVM,UAAQ,KAFE;AAGVC,WAASC,kBAAQC,UAHP;AAIVC,MAAIC,cAAcV,EAAd,GAAmB,EAAC,YAAY,GAAb,EAAnB,GAAuC,EAAE,MAAMA,EAAR,EAAY,YAAW,GAAvB;AAE/C;AANc,EAAd,CAOA,OAAO,oBAAKC,OAAL,CAAP;AACA,CAVD;;AAYA;;;;;;;;AAQA,IAAIU,oBAAoB,SAApBA,iBAAoB,CAASZ,QAAT,EAAmBC,EAAnB,EAAsB;AAC7C;AACA,KAAIC,UAAU;AACVC,OAAKC,kBAAQC,cAAR,CAAuBL,QAAvB,IAAmC,mCAD9B;AAEVM,UAAQ,KAFE;AAGVC,WAASC,kBAAQC,UAHP;AAIVC,MAAI,EAAC,aAAaT,EAAd;AAER;AANc,EAAd,CAOA,OAAO,oBAAKC,OAAL,CAAP;AACA,CAVD;;AAYA;;;;;;;;AAQA,IAAIW,OAAO,SAAPA,IAAO,CAASb,QAAT,EAAmBC,EAAnB,EAAuB;AACjC;AACA,KAAIC,UAAU;AACVC,OAAKC,kBAAQC,cAAR,CAAuBL,QAAvB,IAAmC,YAD9B;AAEVM,UAAQ,KAFE;AAGVC,WAASC,kBAAQC,UAHP;AAIVC,MAAI,EAAC,aAAaT,EAAd;AAER;AANc,EAAd,CAOA,OAAO,oBAAKC,OAAL,CAAP;AACA,CAVD;;AAYAY,OAAOC,OAAP,GAAiB;AAChBhB,aADgB;AAEhBa,qCAFgB;AAGhBC;AAHgB,CAAjB","file":"namespace.js","sourcesContent":["import Send from './send';\nimport Headers from './headers';\nimport Helpers from '../../utils/helpers';\n\n/**\n * Gets root namespaces.\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {number} id - The namespace id up to which root namespaces are returned (optional)\n *\n * @return {object} - An array of [NamespaceMetaDataPair]{@link http://bob.nem.ninja/docs/#namespaceMetaDataPair} objects\n */\nlet roots = function(endpoint, id){\n\t// Configure the request\n\tvar options = {\n\t    url: Helpers.formatEndpoint(endpoint) + '/namespace/root/page',\n\t    method: 'GET',\n\t    headers: Headers.urlEncoded,\n\t    qs: undefined === id ? {'pageSize': 100} : { 'id': id, 'pageSize':100}\n\t}\n\t// Send the request\n\treturn Send(options);\n}\n\n/**\n * Gets mosaic definitions of a namespace\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {string} id - A namespace id\n *\n * @return {object} - An array of [MosaicDefinition]{@link http://bob.nem.ninja/docs/#mosaicDefinition} objects\n */\nlet mosaicDefinitions = function(endpoint, id){\n\t// Configure the request\n\tvar options = {\n\t    url: Helpers.formatEndpoint(endpoint) + '/namespace/mosaic/definition/page',\n\t    method: 'GET',\n\t    headers: Headers.urlEncoded,\n\t    qs: {'namespace': id}\n\t}\n\t// Send the request\n\treturn Send(options);\n}\n\n/**\n * Gets the namespace with given id.\n *\n * @param {object} endpoint - An NIS endpoint object\n * @param {string} id - A namespace id\n *\n * @return {object} - A [NamespaceInfo]{@link http://bob.nem.ninja/docs/#namespace} object\n */\nlet info = function(endpoint, id) {\n\t// Configure the request\n\tvar options = {\n\t    url: Helpers.formatEndpoint(endpoint) + '/namespace',\n\t    method: 'GET',\n\t    headers: Headers.urlEncoded,\n\t    qs: {'namespace': id}\n\t}\n\t// Send the request\n\treturn Send(options);\n}\n\nmodule.exports = {\n\troots,\n\tmosaicDefinitions,\n\tinfo\n}"]}},"error":null,"hash":"fa9d04efa02f724433fc2b76e8b0e146","cacheData":{"env":{}}}